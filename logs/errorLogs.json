[
  {
    "time": "2024-05-23T06:10:42.994Z",
    "name": "validation",
    "message": "Invalid request.",
    "stack": [
      "validation: Invalid request.",
      "    at instantiateValidationError (C:\\Users\\alexw\\OneDrive\\Desktop\\BACKUP\\Backup\\FSJS H8\\Phase 1\\finalProject\\intelliTrade_sequelized\\intelliTrade\\utils\\errorClass.js:18:32)",
      "    at buyPost (C:\\Users\\alexw\\OneDrive\\Desktop\\BACKUP\\Backup\\FSJS H8\\Phase 1\\finalProject\\intelliTrade_sequelized\\intelliTrade\\controllers\\marketController.js:98:18)"
    ]
  },
  {
    "time": "2024-05-23T06:16:41.480Z",
    "name": "validation",
    "message": "Invalid request.",
    "stack": [
      "validation: Invalid request.",
      "    at instantiateValidationError (C:\\Users\\alexw\\OneDrive\\Desktop\\BACKUP\\Backup\\FSJS H8\\Phase 1\\finalProject\\intelliTrade_sequelized\\intelliTrade\\utils\\errorClass.js:18:32)",
      "    at buyPost (C:\\Users\\alexw\\OneDrive\\Desktop\\BACKUP\\Backup\\FSJS H8\\Phase 1\\finalProject\\intelliTrade_sequelized\\intelliTrade\\controllers\\marketController.js:98:18)"
    ]
  },
  {
    "time": "2024-05-23T06:19:38.384Z",
    "name": "ReferenceError",
    "message": "C:\\Users\\alexw\\OneDrive\\Desktop\\BACKUP\\Backup\\FSJS H8\\Phase 1\\finalProject\\intelliTrade_sequelized\\intelliTrade\\views\\pages\\Dashboard.ejs:3\n    1| <%- include('../partials/Header.ejs', {title: 'Dashboard' }) %>\r\n    2| \r\n >> 3|   <%- include('../partials/Transactions.ejs', { stocks, portfolios, transactionRoute }) %>\r\n    4| \r\n    5|     <div style=\"gap: 0px; display: flex; flex-direction: column;\">\r\n    6|       <div class=\"w-full xl:w-full mb-6 xl:mb-0 px-4 mt-24 xl:ml-200 xl:mr-200\">\r\n\nC:\\Users\\alexw\\OneDrive\\Desktop\\BACKUP\\Backup\\FSJS H8\\Phase 1\\finalProject\\intelliTrade_sequelized\\intelliTrade\\views\\partials\\Transactions.ejs:8\n    6| \t\t\t<div class=\"errorAlignForm\">\r\n    7| \t\t\t\t<label for=\"StockId\">Stock:</label>\r\n >> 8| \t\t\t\t<p class=\"errorMessageForm\"><%= errors.StockId %></p>\r\n    9| \t\t\t</div>\r\n    10| \t\t\t<select name=\"StockId\" id=\"StockId\">\r\n    11| \t\t\t\t<option value=\"\">--SELECT--</option>\r\n\nerrors is not defined",
    "origin": "C:\\Users\\alexw\\OneDrive\\Desktop\\BACKUP\\Backup\\FSJS H8\\Phase 1\\finalProject\\intelliTrade_sequelized\\intelliTrade\\views\\pages\\Dashboard.ejs",
    "stack": [
      "ReferenceError: C:\\Users\\alexw\\OneDrive\\Desktop\\BACKUP\\Backup\\FSJS H8\\Phase 1\\finalProject\\intelliTrade_sequelized\\intelliTrade\\views\\pages\\Dashboard.ejs:3",
      "    1| <%- include('../partials/Header.ejs', {title: 'Dashboard' }) %>\r",
      "    2| \r",
      " >> 3|   <%- include('../partials/Transactions.ejs', { stocks, portfolios, transactionRoute }) %>\r",
      "    4| \r",
      "    5|     <div style=\"gap: 0px; display: flex; flex-direction: column;\">\r",
      "    6|       <div class=\"w-full xl:w-full mb-6 xl:mb-0 px-4 mt-24 xl:ml-200 xl:mr-200\">\r",
      "",
      "C:\\Users\\alexw\\OneDrive\\Desktop\\BACKUP\\Backup\\FSJS H8\\Phase 1\\finalProject\\intelliTrade_sequelized\\intelliTrade\\views\\partials\\Transactions.ejs:8",
      "    6| \t\t\t<div class=\"errorAlignForm\">\r",
      "    7| \t\t\t\t<label for=\"StockId\">Stock:</label>\r",
      " >> 8| \t\t\t\t<p class=\"errorMessageForm\"><%= errors.StockId %></p>\r",
      "    9| \t\t\t</div>\r",
      "    10| \t\t\t<select name=\"StockId\" id=\"StockId\">\r",
      "    11| \t\t\t\t<option value=\"\">--SELECT--</option>\r",
      "",
      "errors is not defined",
      "    at eval (eval at compile (C:\\Users\\alexw\\OneDrive\\Desktop\\BACKUP\\Backup\\FSJS H8\\Phase 1\\finalProject\\intelliTrade_sequelized\\intelliTrade\\node_modules\\ejs\\lib\\ejs.js:673:12), <anonymous>:15:26)",
      "    at Transactions (C:\\Users\\alexw\\OneDrive\\Desktop\\BACKUP\\Backup\\FSJS H8\\Phase 1\\finalProject\\intelliTrade_sequelized\\intelliTrade\\node_modules\\ejs\\lib\\ejs.js:703:17)",
      "    at include (C:\\Users\\alexw\\OneDrive\\Desktop\\BACKUP\\Backup\\FSJS H8\\Phase 1\\finalProject\\intelliTrade_sequelized\\intelliTrade\\node_modules\\ejs\\lib\\ejs.js:701:39)",
      "    at eval (eval at compile (C:\\Users\\alexw\\OneDrive\\Desktop\\BACKUP\\Backup\\FSJS H8\\Phase 1\\finalProject\\intelliTrade_sequelized\\intelliTrade\\node_modules\\ejs\\lib\\ejs.js:673:12), <anonymous>:13:17)",
      "    at Dashboard (C:\\Users\\alexw\\OneDrive\\Desktop\\BACKUP\\Backup\\FSJS H8\\Phase 1\\finalProject\\intelliTrade_sequelized\\intelliTrade\\node_modules\\ejs\\lib\\ejs.js:703:17)",
      "    at tryHandleCache (C:\\Users\\alexw\\OneDrive\\Desktop\\BACKUP\\Backup\\FSJS H8\\Phase 1\\finalProject\\intelliTrade_sequelized\\intelliTrade\\node_modules\\ejs\\lib\\ejs.js:274:36)",
      "    at exports.renderFile [as engine] (C:\\Users\\alexw\\OneDrive\\Desktop\\BACKUP\\Backup\\FSJS H8\\Phase 1\\finalProject\\intelliTrade_sequelized\\intelliTrade\\node_modules\\ejs\\lib\\ejs.js:491:10)",
      "    at View.render (C:\\Users\\alexw\\OneDrive\\Desktop\\BACKUP\\Backup\\FSJS H8\\Phase 1\\finalProject\\intelliTrade_sequelized\\intelliTrade\\node_modules\\express\\lib\\view.js:135:8)",
      "    at tryRender (C:\\Users\\alexw\\OneDrive\\Desktop\\BACKUP\\Backup\\FSJS H8\\Phase 1\\finalProject\\intelliTrade_sequelized\\intelliTrade\\node_modules\\express\\lib\\application.js:657:10)",
      "    at Function.render (C:\\Users\\alexw\\OneDrive\\Desktop\\BACKUP\\Backup\\FSJS H8\\Phase 1\\finalProject\\intelliTrade_sequelized\\intelliTrade\\node_modules\\express\\lib\\application.js:609:3)"
    ]
  },
  {
    "time": "2024-05-23T06:20:11.312Z",
    "name": "SequelizeDatabaseError",
    "message": "invalid input syntax for type integer: \"error1\"",
    "stack": [
      "Error",
      "    at Query.run (C:\\Users\\alexw\\OneDrive\\Desktop\\BACKUP\\Backup\\FSJS H8\\Phase 1\\finalProject\\intelliTrade_sequelized\\intelliTrade\\node_modules\\sequelize\\lib\\dialects\\postgres\\query.js:50:25)",
      "    at C:\\Users\\alexw\\OneDrive\\Desktop\\BACKUP\\Backup\\FSJS H8\\Phase 1\\finalProject\\intelliTrade_sequelized\\intelliTrade\\node_modules\\sequelize\\lib\\sequelize.js:315:28",
      "    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
      "    at async PostgresQueryInterface.select (C:\\Users\\alexw\\OneDrive\\Desktop\\BACKUP\\Backup\\FSJS H8\\Phase 1\\finalProject\\intelliTrade_sequelized\\intelliTrade\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:407:12)",
      "    at async StockHistory.findAll (C:\\Users\\alexw\\OneDrive\\Desktop\\BACKUP\\Backup\\FSJS H8\\Phase 1\\finalProject\\intelliTrade_sequelized\\intelliTrade\\node_modules\\sequelize\\lib\\model.js:1140:21)",
      "    at async StockHistory.readHistorical (C:\\Users\\alexw\\OneDrive\\Desktop\\BACKUP\\Backup\\FSJS H8\\Phase 1\\finalProject\\intelliTrade_sequelized\\intelliTrade\\models\\stockhistory.js:14:29)",
      "    at async stockDetails (C:\\Users\\alexw\\OneDrive\\Desktop\\BACKUP\\Backup\\FSJS H8\\Phase 1\\finalProject\\intelliTrade_sequelized\\intelliTrade\\controllers\\marketController.js:60:37)"
    ]
  },
  {
    "time": "2024-05-23T06:20:21.842Z",
    "name": "validation",
    "message": "Invalid request.",
    "stack": [
      "validation: Invalid request.",
      "    at instantiateValidationError (C:\\Users\\alexw\\OneDrive\\Desktop\\BACKUP\\Backup\\FSJS H8\\Phase 1\\finalProject\\intelliTrade_sequelized\\intelliTrade\\utils\\errorClass.js:18:32)",
      "    at buyPost (C:\\Users\\alexw\\OneDrive\\Desktop\\BACKUP\\Backup\\FSJS H8\\Phase 1\\finalProject\\intelliTrade_sequelized\\intelliTrade\\controllers\\marketController.js:99:18)"
    ]
  }
]