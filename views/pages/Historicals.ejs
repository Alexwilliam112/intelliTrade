<%- include('../partials/Header.ejs', {title: 'Historical Details' }) %>

    <div style="background-color: #121A2C; position: relative; padding-top: 120px;">

        <div class="max-w-sm w-full lg:max-w-full lg:flex">
            <div class="h-48 lg:h-auto lg:w-48 flex-none bg-cover rounded-t lg:rounded-t-none lg:rounded-l text-center overflow-hidden"
                style="background-image: url('/img/card-left.jpg')" title="Woman holding a mug">
            </div>
            <div
                class="border-r border-b border-l border-gray-400 lg:border-l-0 lg:border-t lg:border-gray-400 bg-white rounded-b lg:rounded-b-none lg:rounded-r p-4 flex flex-col justify-between leading-normal">
                <div class="mb-8">
                    <p class="text-sm text-gray-600 flex items-center">
                        <svg class="fill-current text-gray-500 w-3 h-3 mr-2" xmlns="http://www.w3.org/2000/svg"
                            viewBox="0 0 20 20">
                            <path
                                d="M4 8V6a6 6 0 1 1 12 0v2h1a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2v-8c0-1.1.9-2 2-2h1zm5 6.73V17h2v-2.27a2 2 0 1 0-2 0zM7 6v2h6V6a3 3 0 0 0-6 0z" />
                        </svg>
                        Members only
                    </p>
                    <div class="text-gray-900 font-bold text-xl mb-2">Can coffee make you a better developer?</div>
                    <p class="text-gray-700 text-base">Lorem ipsum dolor sit amet, consectetur adipisicing elit.
                        Voluptatibus quia, nulla! Maiores et perferendis eaque, exercitationem praesentium nihil.</p>
                </div>
                <div class="flex items-center">
                    <img class="w-10 h-10 rounded-full mr-4" src="/img/jonathan.jpg" alt="Avatar of Jonathan Reinink">
                    <div class="text-sm">
                        <p class="text-gray-900 leading-none">Jonathan Reinink</p>
                        <p class="text-gray-600">Aug 18</p>
                    </div>
                </div>
            </div>
        </div>

        <div class="grid grid-cols-1 gap-8 p-10 mt-14 lg:grid-cols-2 xl:grid-cols-4">
            <div class="flex items-center shadow justify-between p-4 bg-white rounded-md">
                <div>
                    <h6 class="text-xs font-medium leading-none tracking-wider text-gray-500 uppercase">
                        IPO Fund Raised
                    </h6>
                    <span class="text-xl font-semibold">
                        <%= stockDetail.ipoFundRaised %>
                    </span>
                </div>
                <div>
                    <span>
                        <svg class="w-12 h-12 text-gray-300" xmlns="http://www.w3.org/2000/svg" fill="none"
                            viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z">
                            </path>
                        </svg>
                    </span>
                </div>
            </div>

            <div class="flex items-center shadow justify-between p-4 bg-white rounded-md">
                <div>
                    <h6 class="text-xs font-medium leading-none tracking-wider text-gray-500 uppercase">
                        IPO Percentage
                    </h6>
                    <span class="text-xl font-semibold">
                        <%= stockDetail.ipoPercentage %>
                    </span>
                </div>
                <div>
                    <span>
                        <svg class="w-12 h-12 text-gray-300" xmlns="http://www.w3.org/2000/svg" fill="none"
                            viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197M13 7a4 4 0 11-8 0 4 4 0 018 0z">
                            </path>
                        </svg>
                    </span>
                </div>
            </div>

            <div class="flex items-center shadow justify-between p-4 bg-white rounded-md">
                <div>
                    <h6 class="text-xs font-medium leading-none tracking-wider text-gray-500 uppercase">
                        Dividend Yield
                    </h6>
                    <span class="text-xl font-semibold">
                        <%= stockDetail.dividend %>
                    </span>
                </div>
                <div>
                    <span>
                        <svg class="w-12 h-12 text-gray-300" xmlns="http://www.w3.org/2000/svg" fill="none"
                            viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M13 7h8m0 0v8m0-8l-8 8-4-4-6 6"></path>
                        </svg>
                    </span>
                </div>
            </div>

            <div class="flex items-center shadow justify-between p-4 bg-white rounded-md">
                <div>
                    <h6 class="text-xs font-medium leading-none tracking-wider text-gray-500 uppercase">
                        IPO Offering Shares
                    </h6>
                    <span class="text-xl font-semibold">
                        <%= stockDetail.ipoOfferingShares %>
                    </span>
                </div>
                <div>
                    <span>
                        <svg class="w-12 h-12 text-gray-300" xmlns="http://www.w3.org/2000/svg" fill="none"
                            viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M15 5v2m0 4v2m0 4v2M5 5a2 2 0 00-2 2v3a2 2 0 110 4v3a2 2 0 002 2h14a2 2 0 002-2v-3a2 2 0 110-4V7a2 2 0 00-2-2H5z">
                            </path>
                        </svg>
                    </span>
                </div>
            </div>
        </div>

        <div class="historicalContent">
            <div class="chartTitle">
                MARKET TRADE DATA
            </div>
            <div id="candleChart" class="chartContainer"></div>
            <div class="chartTitle" style="padding-top: 10px;">
                TRADE VOLUME
            </div>
            <div id="barChart" class="chartContainer"></div>
        </div>
    </div>

    <div id="dataContainer" data-chartData="<%= historicalDatas %>"></div>

    <script src="https://cdn.plot.ly/plotly-latest.min.js"></script>
    <script type="module">
        document.addEventListener("DOMContentLoaded", function () {
            const historicalDatasElement = document.getElementById('dataContainer');
            if (historicalDatasElement) {
                const historicalDatas = JSON.parse(historicalDatasElement.getAttribute('data-chartData'));
                const dates = historicalDatas.map(el => el.date);
                const close = historicalDatas.map(el => el.close);
                const open = historicalDatas.map(el => el.open);
                const high = historicalDatas.map(el => el.high);
                const low = historicalDatas.map(el => el.low);
                const volume = historicalDatas.map(el => el.volume);

                const spreadMin = low.map((el) => {
                    if (el !== 0) {
                        return el
                    }
                })
                const spreadMax = high.map((el) => {
                    if (el !== 0) {
                        return el
                    }
                })

                const candleData = {
                    x: dates,
                    close: close,
                    decreasing: {
                        line: { color: '#FF0606' },
                        width: 0.2
                    },
                    high: high,
                    increasing: {
                        line: { color: '#1AFF06' },
                        width: 0.2
                    },
                    line: { color: 'rgba(31,119,180,1)', width: 1 },
                    low: low,
                    open: open,
                    type: 'candlestick',
                    xaxis: 'x',
                    yaxis: 'y'
                };

                const barData = [
                    {
                        x: dates,
                        y: volume,
                        type: 'bar',
                        marker: {
                            color: 'cyan'
                        },
                    }
                ];

                const layout1 = {
                    dragmode: 'zoom',
                    plot_bgcolor: "#202D4C",
                    paper_bgcolor: "#121A2C",
                    margin: {
                        r: 10,
                        t: 25,
                        b: 40,
                        l: 60
                    },
                    showlegend: false,
                    xaxis: {
                        autorange: true,
                        domain: [0, 1],
                        rangeselector: {
                            x: 0,
                            y: 1.2,
                            xanchor: 'left',
                            font: { size: 8 },
                            buttons: [{
                                step: 'month',
                                stepmode: 'backward',
                                count: 6,
                                label: '1 Month'
                            }, {
                                step: 'month',
                                stepmode: 'backward',
                                count: 12,
                                label: '1 Year'
                            }, {
                                step: 'all',
                                label: 'All dates'
                            }]
                        },
                        range: [dates[0], dates[dates.length - 1]],
                        rangeslider: { range: [dates[0], dates[dates.length - 1]] },
                        gridcolor: 'rgb(44, 57, 86)'
                    },
                    yaxis: {
                        autorange: true,
                        domain: [0, 1],
                        range: [Math.min(...spreadMin), Math.max(...spreadMax)],
                        type: 'linear',
                        gridcolor: 'rgb(44, 57, 86)'
                    }
                };

                const layout2 = {
                    plot_bgcolor: "#202D4C",
                    paper_bgcolor: "#121A2C",
                    dragmode: 'zoom',
                    margin: {
                        r: 10,
                        t: 25,
                        b: 40,
                        l: 60
                    },
                    showlegend: false,
                    xaxis: {
                        autorange: true,
                        domain: [0, 1],
                        rangeselector: {
                            x: 0,
                            y: 1.2,
                            xanchor: 'left',
                            font: { size: 8 },
                            buttons: [{
                                step: 'month',
                                stepmode: 'backward',
                                count: 6,
                                label: '1 Month'
                            }, {
                                step: 'month',
                                stepmode: 'backward',
                                count: 12,
                                label: '1 Year'
                            }, {
                                step: 'all',
                                label: 'All dates'
                            }]
                        },
                        range: [dates[0], dates[dates.length - 1]],
                        rangeslider: { range: [dates[0], dates[dates.length - 1]] },
                        gridcolor: 'rgb(44, 57, 86)'
                    },
                    yaxis: {
                        gridcolor: 'rgb(44, 57, 86)'
                    }
                };

                Plotly.newPlot('candleChart', [candleData], layout1), { displayModeBar: false };
                Plotly.newPlot('barChart', barData, layout2)
                    .then(gd => {
                        gd.on('plotly_afterplot', () => {
                            console.log('BAR GRAPH RENDERED');
                        });
                    })
                    .catch(error => {
                        console.error('BAR GRAPH ERROR:', error);
                    })
            }
        });
    </script>

    <%- include('../partials/Footer.ejs') %>